{"remainingRequest":"/Users/curry/IdeaProjects/web/node_modules/babel-loader/lib/index.js!/Users/curry/IdeaProjects/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/curry/IdeaProjects/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/curry/IdeaProjects/web/src/components/Distpicker/Distpicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/curry/IdeaProjects/web/src/components/Distpicker/Distpicker.vue","mtime":1591698534000},{"path":"/Users/curry/IdeaProjects/web/node_modules/cache-loader/dist/cjs.js","mtime":1644834874663},{"path":"/Users/curry/IdeaProjects/web/node_modules/babel-loader/lib/index.js","mtime":1644834704109},{"path":"/Users/curry/IdeaProjects/web/node_modules/cache-loader/dist/cjs.js","mtime":1644834874663},{"path":"/Users/curry/IdeaProjects/web/node_modules/vue-loader/lib/index.js","mtime":1644834877865}],"contextDependencies":[],"result":["import _parseInt from \"/Users/curry/IdeaProjects/web/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DISTRICTS from './districts';\nvar DEFAULT_CODE = 100000;\nexport default {\n  name: 'v-distpicker',\n  props: {\n    province: {\n      type: [String, Number],\n      default: ''\n    },\n    city: {\n      type: [String, Number],\n      default: ''\n    },\n    area: {\n      type: [String, Number],\n      default: ''\n    },\n    type: {\n      type: String,\n      default: ''\n    },\n    hideArea: {\n      type: Boolean,\n      default: false\n    },\n    onlyProvince: {\n      type: Boolean,\n      default: false\n    },\n    staticPlaceholder: {\n      type: Boolean,\n      default: false\n    },\n    placeholders: {\n      type: Object,\n      default: function _default() {\n        return {\n          province: '省',\n          city: '市',\n          area: '区'\n        };\n      }\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    provinceDisabled: {\n      type: Boolean,\n      default: false\n    },\n    cityDisabled: {\n      type: Boolean,\n      default: false\n    },\n    areaDisabled: {\n      type: Boolean,\n      default: false\n    },\n    addressHeader: {\n      type: String,\n      default: 'address-header'\n    },\n    addressContainer: {\n      type: String,\n      default: 'address-container'\n    },\n    wrapper: {\n      type: String,\n      default: 'distpicker-address-wrapper'\n    }\n  },\n  data: function data() {\n    return {\n      tab: 1,\n      showCityTab: false,\n      showAreaTab: false,\n      provinces: [],\n      cities: [],\n      areas: [],\n      currentProvince: this.determineType(this.province) || this.placeholders.province,\n      currentCity: this.determineType(this.city) || this.placeholders.city,\n      currentArea: this.determineType(this.area) || this.placeholders.area\n    };\n  },\n  created: function created() {\n    if (this.type != 'mobile') {\n      this.provinces = this.getDistricts();\n      this.cities = this.province ? this.getDistricts(this.getAreaCode(this.determineType(this.province))) : [];\n      this.areas = this.city ? this.getDistricts(this.getAreaCode(this.determineType(this.city), this.area)) : [];\n    } else {\n      if (this.area && !this.hideArea && !this.onlyProvince) {\n        this.tab = 3;\n        this.showCityTab = true;\n        this.showAreaTab = true;\n        this.areas = this.getDistricts(this.getAreaCode(this.determineType(this.city), this.area));\n      } else if (this.city && this.hideArea && !this.onlyProvince) {\n        this.tab = 2;\n        this.showCityTab = true;\n        this.cities = this.getDistricts(this.getAreaCode(this.determineType(this.province)));\n      } else {\n        this.provinces = this.getDistricts();\n      }\n    }\n  },\n  watch: {\n    currentProvince: function currentProvince(vaule) {\n      this.$emit('province', this.setData(vaule));\n      if (this.onlyProvince) this.emit('selected');\n    },\n    currentCity: function currentCity(value) {\n      this.$emit('city', this.setData(value, this.currentProvince));\n      if (value != this.placeholders.city && this.hideArea) this.emit('selected');\n    },\n    currentArea: function currentArea(value) {\n      this.$emit('area', this.setData(value, this.currentProvince));\n      this.emit('selected');\n    },\n    province: function province(value) {\n      this.currentProvince = this.province || this.placeholders.province;\n      this.cities = this.determineValue(this.currentProvince, this.placeholders.province);\n    },\n    city: function city(value) {\n      this.currentCity = this.city || this.placeholders.city;\n      this.areas = this.determineValue(this.currentCity, this.placeholders.city, this.currentProvince);\n    },\n    area: function area(value) {\n      this.currentArea = this.area || this.placeholders.area;\n    }\n  },\n  methods: {\n    setData: function setData(value) {\n      var check = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      return {\n        code: this.getAreaCode(value, check),\n        value: value\n      };\n    },\n    emit: function emit(name) {\n      var data = {\n        province: this.setData(this.currentProvince)\n      };\n\n      if (!this.onlyProvince) {\n        this.$set(data, 'city', this.setData(this.currentCity));\n      }\n\n      if (!this.onlyProvince || this.hideArea) {\n        this.$set(data, 'area', this.setData(this.currentArea, this.currentCity));\n      }\n\n      this.$emit(name, data);\n    },\n    getCities: function getCities() {\n      this.currentCity = this.placeholders.city;\n      this.currentArea = this.placeholders.area;\n      this.cities = this.determineValue(this.currentProvince, this.placeholders.province);\n      this.cleanList('areas');\n\n      if (this.cities.length === 0) {\n        this.emit('selected');\n        this.tab = 1;\n        this.showCityTab = false;\n      }\n    },\n    getAreas: function getAreas() {\n      this.currentArea = this.placeholders.area;\n      this.areas = this.determineValue(this.currentCity, this.placeholders.city, this.currentProvince);\n\n      if (this.areas.length === 0) {\n        this.emit('selected');\n        this.tab = 2;\n        this.showAreaTab = false;\n      }\n    },\n    resetProvince: function resetProvince() {\n      this.tab = 1;\n      this.provinces = this.getDistricts();\n      this.showCityTab = false;\n      this.showAreaTab = false;\n    },\n    resetCity: function resetCity() {\n      this.tab = 2;\n      this.showCityTab = true;\n      this.showAreaTab = false;\n      this.getCities();\n    },\n    chooseProvince: function chooseProvince(name) {\n      this.currentProvince = name;\n      if (this.onlyProvince) return;\n      this.tab = 2;\n      this.showCityTab = true;\n      this.showAreaTab = false;\n      this.getCities();\n    },\n    chooseCity: function chooseCity(name) {\n      this.currentCity = name;\n      if (this.hideArea) return;\n      this.tab = 3;\n      this.showCityTab = true;\n      this.showAreaTab = true;\n      this.getAreas();\n    },\n    chooseArea: function chooseArea(name) {\n      this.currentArea = name;\n    },\n    getAreaCodeByPreCode: function getAreaCodeByPreCode(name, preCode) {\n      var codes = [];\n\n      for (var x in DISTRICTS) {\n        for (var y in DISTRICTS[x]) {\n          if (name === DISTRICTS[x][y]) {\n            codes.push(y);\n          }\n        }\n      }\n\n      if (codes.length > 1) {\n        var index;\n        codes.forEach(function (item, i) {\n          if (item.slice(0, 2) == preCode) {\n            index = i;\n          }\n        });\n        return codes[index];\n      } else {\n        return codes[0];\n      }\n    },\n    getAreaCode: function getAreaCode(name) {\n      var check = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n      for (var x in DISTRICTS) {\n        for (var y in DISTRICTS[x]) {\n          if (name === DISTRICTS[x][y]) {\n            if (check.length > 0) {\n              if (y.slice(0, 2) !== this.getAreaCodeByPreCode(check, y.slice(0, 2)).slice(0, 2)) {\n                continue;\n              } else {\n                return y;\n              }\n            } else {\n              return y;\n            }\n          }\n        }\n      }\n    },\n    getCodeValue: function getCodeValue(code) {\n      for (var x in DISTRICTS) {\n        for (var y in DISTRICTS[x]) {\n          if (code === _parseInt(y)) {\n            return DISTRICTS[x][y];\n          }\n        }\n      }\n    },\n    getDistricts: function getDistricts() {\n      var code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_CODE;\n      return DISTRICTS[code] || [];\n    },\n    determineValue: function determineValue(currentValue, placeholderValue) {\n      var check = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n      if (currentValue === placeholderValue) {\n        return [];\n      } else {\n        return this.getDistricts(this.getAreaCode(currentValue, check));\n      }\n    },\n    determineType: function determineType(value) {\n      if (typeof value === 'number') {\n        return this.getCodeValue(value);\n      }\n\n      return value;\n    },\n    cleanList: function cleanList(name) {\n      this[name] = [];\n    }\n  }\n};",{"version":3,"sources":["Distpicker.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :class=\"wrapper\">\r\n    <template v-if=\"type != 'mobile'\">\r\n      <a-select @change=\"getCities\" v-model=\"currentProvince\" :disabled=\"disabled || provinceDisabled\">\r\n        <a-select-option :value=\"placeholders.province\">{{ placeholders.province }}</a-select-option>\r\n        <a-select-option v-for=\"(item, index) in provinces\"\r\n                :value=\"item\"\r\n                :key=\"index\">\r\n          {{ item }}\r\n        </a-select-option>\r\n      </a-select>\r\n      <template v-if=\"!onlyProvince\">\r\n        <a-select @change=\"getAreas\" v-model=\"currentCity\" :disabled=\"disabled || cityDisabled\">\r\n          <a-select-option :value=\"placeholders.city\">{{ placeholders.city }}</a-select-option>\r\n          <a-select-option v-for=\"(item, index) in cities\"\r\n                  :value=\"item\"\r\n                  :key=\"index\">\r\n            {{ item }}\r\n          </a-select-option>\r\n        </a-select>\r\n        <a-select v-if=\"!hideArea\" v-model=\"currentArea\" :disabled=\"disabled || areaDisabled\">\r\n          <a-select-option :value=\"placeholders.area\">{{ placeholders.area }}</a-select-option>\r\n          <a-select-option v-for=\"(item, index) in areas \"\r\n                  :value=\"item\"\r\n                  :key=\"index\">\r\n            {{ item }}\r\n          </a-select-option>\r\n        </a-select>\r\n      </template>\r\n    </template>\r\n    <template v-else>\r\n      <div :class=\"addressHeader\">\r\n        <ul>\r\n          <li :class=\"{'active': tab === 1}\" @click=\"resetProvince\">{{ currentProvince && !staticPlaceholder ? currentProvince : placeholders.province }}</li>\r\n          <template v-if=\"!onlyProvince\">\r\n            <li v-if=\"showCityTab\" :class=\"{'active': tab === 2}\" @click=\"resetCity\">{{  currentCity && !staticPlaceholder ? currentCity : placeholders.city }}</li>\r\n            <li v-if=\"showAreaTab && !hideArea\" :class=\"{'active': tab === 3}\">{{ currentArea && !staticPlaceholder ? currentArea : placeholders.area }}</li>\r\n          </template>\r\n        </ul>\r\n      </div>\r\n      <div :class=\"addressContainer\">\r\n        <ul v-if=\"tab === 1\">\r\n          <li v-for=\"(item, index) in provinces\"\r\n              :class=\"{'active': item === currentProvince}\"\r\n              @click=\"chooseProvince(item)\"\r\n              :key=\"index\">\r\n            {{ item }}\r\n          </li>\r\n        </ul>\r\n        <template v-if=\"!onlyProvince\">\r\n          <ul v-if=\"tab === 2\">\r\n            <li v-for=\"(item, index) in cities\"\r\n                :class=\"{'active': item === currentCity}\"\r\n                @click=\"chooseCity(item)\"\r\n                :key=\"index\">\r\n              {{ item }}\r\n            </li>\r\n          </ul>\r\n          <ul v-if=\"tab === 3 && !hideArea\">\r\n            <li v-for=\"(item, index) in areas\"\r\n                :class=\"{'active': item === currentArea}\"\r\n                @click=\"chooseArea(item)\"\r\n                :key=\"index\">\r\n              {{ item }}\r\n            </li>\r\n          </ul>\r\n        </template>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport DISTRICTS from './districts';\r\n\r\nconst DEFAULT_CODE = 100000;\r\n\r\nexport default {\r\n  name: 'v-distpicker',\r\n  props: {\r\n    province: { type: [String, Number], default: '' },\r\n    city: { type: [String, Number], default: '' },\r\n    area: { type: [String, Number], default: '' },\r\n    type: { type: String, default: '' },\r\n    hideArea: { type: Boolean, default: false },\r\n    onlyProvince: { type: Boolean, default: false },\r\n    staticPlaceholder: { type: Boolean, default: false },\r\n    placeholders: {\r\n      type: Object,\r\n      default() {\r\n        return {\r\n          province: '省',\r\n          city: '市',\r\n          area: '区',\r\n        }\r\n      }\r\n    },\r\n    disabled: { type: Boolean, default: false },\r\n    provinceDisabled: { type: Boolean, default: false },\r\n    cityDisabled: { type: Boolean, default: false },\r\n    areaDisabled: { type: Boolean, default: false },\r\n    addressHeader: { type: String, default: 'address-header' },\r\n    addressContainer: { type: String, default: 'address-container' },\r\n    wrapper: { type: String, default: 'distpicker-address-wrapper' },\r\n  },\r\n  data() {\r\n    return {\r\n      tab: 1,\r\n      showCityTab: false,\r\n      showAreaTab: false,\r\n      provinces: [],\r\n      cities: [],\r\n      areas: [],\r\n      currentProvince: this.determineType(this.province) || this.placeholders.province,\r\n      currentCity: this.determineType(this.city) || this.placeholders.city,\r\n      currentArea: this.determineType(this.area) || this.placeholders.area,\r\n    }\r\n  },\r\n  created() {\r\n    if (this.type != 'mobile') {\r\n      this.provinces = this.getDistricts()\r\n      this.cities = this.province ? this.getDistricts(this.getAreaCode(this.determineType(this.province))) : []\r\n      this.areas = this.city ? this.getDistricts(this.getAreaCode(this.determineType(this.city), this.area)) : []\r\n    } else {\r\n      if (this.area && !this.hideArea && !this.onlyProvince) {\r\n        this.tab = 3\r\n        this.showCityTab = true\r\n        this.showAreaTab = true\r\n        this.areas = this.getDistricts(this.getAreaCode(this.determineType(this.city), this.area))\r\n      } else if (this.city && this.hideArea && !this.onlyProvince) {\r\n        this.tab = 2\r\n        this.showCityTab = true\r\n        this.cities = this.getDistricts(this.getAreaCode(this.determineType(this.province)))\r\n      } else {\r\n        this.provinces = this.getDistricts()\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    currentProvince(vaule) {\r\n      this.$emit('province', this.setData(vaule))\r\n      if (this.onlyProvince) this.emit('selected')\r\n    },\r\n    currentCity(value) {\r\n      this.$emit('city', this.setData(value, this.currentProvince))\r\n      if (value != this.placeholders.city && this.hideArea) this.emit('selected')\r\n    },\r\n    currentArea(value) {\r\n      this.$emit('area', this.setData(value, this.currentProvince))\r\n      this.emit('selected')\r\n    },\r\n    province(value) {\r\n      this.currentProvince = this.province || this.placeholders.province\r\n      this.cities = this.determineValue(this.currentProvince, this.placeholders.province)\r\n    },\r\n    city(value) {\r\n      this.currentCity = this.city || this.placeholders.city\r\n      this.areas = this.determineValue(this.currentCity, this.placeholders.city, this.currentProvince)\r\n    },\r\n    area(value) {\r\n      this.currentArea = this.area || this.placeholders.area\r\n    },\r\n  },\r\n  methods: {\r\n    setData(value, check = '') {\r\n      return {\r\n        code: this.getAreaCode(value, check),\r\n        value: value,\r\n      }\r\n    },\r\n    emit(name) {\r\n      let data = {\r\n        province: this.setData(this.currentProvince)\r\n      }\r\n\r\n      if (!this.onlyProvince) {\r\n        this.$set(data, 'city', this.setData(this.currentCity))\r\n      }\r\n\r\n      if (!this.onlyProvince || this.hideArea) {\r\n        this.$set(data, 'area', this.setData(this.currentArea, this.currentCity))\r\n      }\r\n\r\n      this.$emit(name, data)\r\n    },\r\n    getCities() {\r\n      this.currentCity = this.placeholders.city\r\n      this.currentArea = this.placeholders.area\r\n      this.cities = this.determineValue(this.currentProvince, this.placeholders.province)\r\n      this.cleanList('areas')\r\n      if (this.cities.length === 0) {\r\n        this.emit('selected')\r\n        this.tab = 1\r\n        this.showCityTab = false\r\n      }\r\n    },\r\n    getAreas() {\r\n      this.currentArea = this.placeholders.area\r\n      this.areas = this.determineValue(this.currentCity, this.placeholders.city, this.currentProvince)\r\n      if (this.areas.length === 0) {\r\n        this.emit('selected')\r\n        this.tab = 2\r\n        this.showAreaTab = false\r\n      }\r\n    },\r\n    resetProvince() {\r\n      this.tab = 1\r\n      this.provinces = this.getDistricts()\r\n      this.showCityTab = false\r\n      this.showAreaTab = false\r\n    },\r\n    resetCity() {\r\n      this.tab = 2\r\n      this.showCityTab = true\r\n      this.showAreaTab = false\r\n      this.getCities()\r\n    },\r\n    chooseProvince(name) {\r\n      this.currentProvince = name\r\n      if (this.onlyProvince) return\r\n      this.tab = 2\r\n      this.showCityTab = true\r\n      this.showAreaTab = false\r\n      this.getCities()\r\n    },\r\n    chooseCity(name) {\r\n      this.currentCity = name\r\n      if (this.hideArea) return\r\n      this.tab = 3\r\n      this.showCityTab = true\r\n      this.showAreaTab = true\r\n      this.getAreas()\r\n    },\r\n    chooseArea(name) {\r\n      this.currentArea = name\r\n    },\r\n    getAreaCodeByPreCode(name, preCode) {\r\n      let codes = []\r\n\r\n      for(let x in DISTRICTS) {\r\n        for(let y in DISTRICTS[x]) {\r\n          if(name === DISTRICTS[x][y]) {\r\n            codes.push(y)\r\n          }\r\n        }\r\n      }\r\n\r\n      if (codes.length > 1) {\r\n        let index\r\n        codes.forEach((item, i) => {\r\n          if (item.slice(0, 2) == preCode) {\r\n            index = i\r\n          }\r\n        })\r\n\r\n        return codes[index]\r\n      } else {\r\n        return codes[0]\r\n      }\r\n    },\r\n    getAreaCode(name, check = '') {\r\n      for(let x in DISTRICTS) {\r\n        for(let y in DISTRICTS[x]) {\r\n          if(name === DISTRICTS[x][y]) {\r\n            if (check.length > 0) {\r\n              if (y.slice(0, 2) !== this.getAreaCodeByPreCode(check, y.slice(0, 2)).slice(0, 2)) {\r\n                continue\r\n              } else {\r\n                return y\r\n              }\r\n            } else {\r\n              return y\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    getCodeValue(code) {\r\n      for(let x in DISTRICTS) {\r\n        for(let y in DISTRICTS[x]) {\r\n          if(code === parseInt(y)) {\r\n            return DISTRICTS[x][y]\r\n          }\r\n        }\r\n      }\r\n    },\r\n    getDistricts(code = DEFAULT_CODE) {\r\n      return DISTRICTS[code] || []\r\n    },\r\n    determineValue(currentValue, placeholderValue, check = '') {\r\n      if(currentValue === placeholderValue) {\r\n        return []\r\n      } else {\r\n        return this.getDistricts(this.getAreaCode(currentValue, check))\r\n      }\r\n    },\r\n    determineType(value) {\r\n      if(typeof value === 'number') {\r\n        return this.getCodeValue(value)\r\n      }\r\n\r\n      return value\r\n    },\r\n    cleanList(name) {\r\n      this[name] = []\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.distpicker-address-wrapper {\r\n  color: #9caebf;\r\n  .ant-select {\r\n\r\n    width: 32.3%;\r\n    margin-right: 1%;\r\n  }\r\n  select {\r\n    padding: 0rem 0rem;\r\n    height: 32px;\r\n    width: 32.3%;\r\n    font-size: 1rem;\r\n    line-height: 32px;\r\n    margin-right: 1%;\r\n    color: #464a4c;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    -webkit-background-clip: padding-box;\r\n    background-clip: padding-box;\r\n    border: 1px solid rgba(0,0,0,.15);\r\n    border-radius: .25rem;\r\n    -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;\r\n    transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;\r\n    -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;\r\n    transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;\r\n    transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;\r\n\r\n    option {\r\n      font-weight: normal;\r\n      display: block;\r\n      white-space: pre;\r\n      min-height: 1.2em;\r\n      padding: 0px 2px 1px;\r\n    }\r\n  }\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    li {\r\n      list-style: none;\r\n    }\r\n  }\r\n  .address-header {\r\n    background-color: #fff;\r\n\r\n    ul {\r\n      display: flex;\r\n      justify-content: space-around;\r\n      align-items: stretch;\r\n\r\n      li {\r\n        display: inline-block;\r\n        padding: 10px 10px 7px;\r\n\r\n        &.active {\r\n          border-bottom: #52697f solid 3px;\r\n          color: #52697f;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .address-container {\r\n    background-color: #fff;\r\n\r\n    ul {\r\n      height: 100%;\r\n      overflow: auto;\r\n\r\n      li {\r\n        padding: 8px 10px;\r\n        border-top: 1px solid #f6f6f6;\r\n\r\n        &.active {\r\n          color: #52697f;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n.disabled-color{\r\n    background: #f8f8f8;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/Distpicker"}]}