{"remainingRequest":"/Users/curry/IdeaProjects/web/node_modules/babel-loader/lib/index.js!/Users/curry/IdeaProjects/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/curry/IdeaProjects/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/curry/IdeaProjects/web/src/views/user/RetrievePwd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/curry/IdeaProjects/web/src/views/user/RetrievePwd.vue","mtime":1591698534000},{"path":"/Users/curry/IdeaProjects/web/node_modules/cache-loader/dist/cjs.js","mtime":1644834874663},{"path":"/Users/curry/IdeaProjects/web/node_modules/babel-loader/lib/index.js","mtime":1644834704109},{"path":"/Users/curry/IdeaProjects/web/node_modules/cache-loader/dist/cjs.js","mtime":1644834874663},{"path":"/Users/curry/IdeaProjects/web/node_modules/vue-loader/lib/index.js","mtime":1644834877865}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/curry/IdeaProjects/web/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/**\r\n * 找回密码\r\n */\nimport { mixinDevice } from '@/utils/mixin.js';\nimport { sendSms, editPwd } from '@/api/retrieve_pwd';\nvar levelNames = {\n  0: '低',\n  1: '低',\n  2: '中',\n  3: '强'\n};\nvar levelClass = {\n  0: 'error',\n  1: 'error',\n  2: 'warning',\n  3: 'success'\n};\nvar levelColor = {\n  0: '#ff0000',\n  1: '#ff0000',\n  2: '#ff7e05',\n  3: '#52c41a'\n};\nexport default {\n  name: 'Register',\n  components: {},\n  mixins: [mixinDevice],\n  data: function data() {\n    return {\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        smsSendBtn: false,\n        passwordLevel: 0,\n        passwordLevelChecked: false,\n        percent: 10,\n        progressColor: '#FF0000'\n      },\n      registerBtn: false\n    };\n  },\n  computed: {\n    passwordLevelClass: function passwordLevelClass() {\n      return levelClass[this.state.passwordLevel];\n    },\n    passwordLevelName: function passwordLevelName() {\n      return levelNames[this.state.passwordLevel];\n    },\n    passwordLevelColor: function passwordLevelColor() {\n      return levelColor[this.state.passwordLevel];\n    }\n  },\n  methods: {\n    handlePasswordLevel: function handlePasswordLevel(rule, value, callback) {\n      var level = 0; // 判断这个字符串中有没有数字\n\n      if (/[0-9]/.test(value)) {\n        level++;\n      } // 判断字符串中有没有字母\n\n\n      if (/[a-zA-Z]/.test(value)) {\n        level++;\n      } // 判断字符串中有没有特殊符号\n\n\n      if (/[^0-9a-zA-Z_]/.test(value)) {\n        level++;\n      }\n\n      this.state.passwordLevel = level;\n      this.state.percent = level * 30;\n\n      if (level >= 2) {\n        if (level >= 3) {\n          this.state.percent = 100;\n        }\n\n        callback();\n      } else {\n        if (level === 0) {\n          this.state.percent = 10;\n        }\n\n        callback(new Error('密码强度不够'));\n      }\n    },\n    handlePasswordCheck: function handlePasswordCheck(rule, value, callback) {\n      var password = this.form.getFieldValue('password');\n      console.log('value', value);\n\n      if (value === undefined) {\n        callback(new Error('请输入密码'));\n      }\n\n      if (value && password && value.trim() !== password.trim()) {\n        callback(new Error('两次密码不一致'));\n      }\n\n      callback();\n    },\n    handlePhoneCheck: function handlePhoneCheck(rule, value, callback) {\n      console.log('handlePhoneCheck, rule:', rule);\n      console.log('handlePhoneCheck, value', value);\n      console.log('handlePhoneCheck, callback', callback);\n      callback();\n    },\n    handlePasswordInputClick: function handlePasswordInputClick() {\n      if (!this.isMobile()) {\n        this.state.passwordLevelChecked = true;\n        return;\n      }\n\n      this.state.passwordLevelChecked = false;\n    },\n    handleSubmit: function handleSubmit() {\n      var _this = this;\n\n      var validateFields = this.form.validateFields,\n          $router = this.$router;\n      validateFields({\n        force: true\n      },\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(err, values) {\n          var editData, data;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (err) {\n                    _context.next = 13;\n                    break;\n                  }\n\n                  console.log(values);\n                  editData = {\n                    mobile: values.mobile,\n                    newPwd: values.password,\n                    conPwd: values.password2,\n                    regType: 0,\n                    verCode: values.captcha\n                  };\n                  _context.prev = 3;\n                  _context.next = 6;\n                  return editPwd(editData);\n\n                case 6:\n                  data = _context.sent;\n\n                  if (data.code === 200) {\n                    _this.$notification.success({\n                      duration: 4,\n                      message: \"密码修改成功\"\n                    });\n\n                    _this.$router.push({\n                      name: 'login'\n                    });\n                  } else {\n                    _this.$notification.error({\n                      duration: 4,\n                      message: data.message\n                    });\n                  }\n\n                  _context.next = 13;\n                  break;\n\n                case 10:\n                  _context.prev = 10;\n                  _context.t0 = _context[\"catch\"](3);\n\n                  _this.requestFailed(\"请求错误\");\n\n                case 13:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[3, 10]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    getCaptcha: function getCaptcha(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var validateFields = this.form.validateFields,\n          state = this.state,\n          $message = this.$message,\n          $notification = this.$notification;\n      validateFields(['mobile'], {\n        force: true\n      },\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee2(err, values) {\n          var interval, hide, sendData, data;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (err) {\n                    _context2.next = 17;\n                    break;\n                  }\n\n                  state.smsSendBtn = true;\n                  interval = window.setInterval(function () {\n                    if (state.time-- <= 0) {\n                      state.time = 60;\n                      state.smsSendBtn = false;\n                      window.clearInterval(interval);\n                    }\n                  }, 1000);\n                  hide = $message.loading('验证码发送中..', 0);\n                  sendData = {\n                    mobileNum: values.mobile,\n                    smsTpye: 1,\n                    regType: 0,\n                    tempId: 1\n                  };\n                  _context2.prev = 5;\n                  setTimeout(hide, 2500);\n                  _context2.next = 9;\n                  return sendSms(sendData);\n\n                case 9:\n                  data = _context2.sent;\n\n                  if (data.code === 200) {\n                    _this2.$notification.success({\n                      message: '验证码发送成功,请注意查收',\n                      duration: 4\n                    });\n                  } else {\n                    _this2.$notification.error({\n                      message: '验证码发送错误',\n                      duration: 4\n                    });\n                  }\n\n                  _context2.next = 17;\n                  break;\n\n                case 13:\n                  _context2.prev = 13;\n                  _context2.t0 = _context2[\"catch\"](5);\n                  setTimeout(hide, 2500);\n\n                  _this2.requestFailed(\"网络错误\");\n\n                case 17:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[5, 13]]);\n        }));\n\n        return function (_x3, _x4) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n    requestFailed: function requestFailed(err) {\n      this.$notification['error']({\n        message: '错误',\n        description: ((err.response || {}).data || {}).message || '请求出现错误，请稍后再试',\n        duration: 4\n      });\n      this.registerBtn = false;\n    }\n  },\n  watch: {\n    'state.passwordLevel': function statePasswordLevel(val) {\n      console.log(val);\n    }\n  }\n};",{"version":3,"sources":["RetrievePwd.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"main user-layout-register\">\r\n    <div class=\"top\">\r\n      <div class=\"header\">\r\n        <a href=\"/\">\r\n          <img src=\"~@/assets/login/forget-pwd.png\" class=\"logo\" alt=\"logo\">\r\n\r\n        </a>\r\n      </div>\r\n      <div class=\"desc\">\r\n        忘记密码\r\n      </div>\r\n    </div>\r\n    <a-form ref=\"formRegister\" :form=\"form\" id=\"formRegister\">\r\n\r\n      <a-form-item>\r\n        <a-input size=\"large\" placeholder=\"请输入手机号\" v-decorator=\"['mobile', {rules: [{ required: true, message: '请输入正确的手机号', pattern: /^1[3456789]\\d{9}$/ }, { validator: this.handlePhoneCheck } ], validateTrigger: ['change', 'blur'] }]\">\r\n\r\n        </a-input>\r\n      </a-form-item>\r\n      <!--<a-input-group size=\"large\" compact>\r\n            <a-select style=\"width: 20%\" size=\"large\" defaultValue=\"+86\">\r\n              <a-select-option value=\"+86\">+86</a-select-option>\r\n              <a-select-option value=\"+87\">+87</a-select-option>\r\n            </a-select>\r\n            <a-input style=\"width: 80%\" size=\"large\" placeholder=\"11 位手机号\"></a-input>\r\n          </a-input-group>-->\r\n\r\n      <a-row :gutter=\"16\">\r\n        <a-col class=\"gutter-row\" :span=\"16\">\r\n          <a-form-item>\r\n            <a-input size=\"large\" type=\"text\" placeholder=\"验证码\" v-decorator=\"['captcha', {rules: [{ required: true, message: '请输入验证码' }], validateTrigger: 'blur'}]\">\r\n\r\n            </a-input>\r\n          </a-form-item>\r\n        </a-col>\r\n        <a-col class=\"gutter-row\" :span=\"8\">\r\n          <a-button\r\n            class=\"getCaptcha\"\r\n            size=\"large\"\r\n            type=\"primary\"\r\n            :disabled=\"state.smsSendBtn\"\r\n            @click.stop.prevent=\"getCaptcha\"\r\n            v-text=\"!state.smsSendBtn && '获取验证码'||(state.time+' s')\"></a-button>\r\n        </a-col>\r\n      </a-row>\r\n\r\n      <a-popover placement=\"rightTop\" trigger=\"focus\" :visible=\"state.passwordLevelChecked\">\r\n        <template slot=\"content\">\r\n          <div :style=\"{ width: '240px' }\" >\r\n            <div :class=\"['user-register', passwordLevelClass]\">强度：<span>{{ passwordLevelName }}</span></div>\r\n            <a-progress :percent=\"state.percent\" :showInfo=\"false\" :strokeColor=\" passwordLevelColor \" />\r\n            <div style=\"margin-top: 10px;\">\r\n              <span>请至少输入 6 个字符。请不要使用容易被猜到的密码。</span>\r\n            </div>\r\n          </div>\r\n        </template>\r\n        <a-form-item>\r\n          <a-input\r\n            size=\"large\"\r\n            type=\"password\"\r\n            @click=\"handlePasswordInputClick\"\r\n            autocomplete=\"false\"\r\n            @blur=\"state.passwordLevelChecked=false\"\r\n            placeholder=\"至少6位密码，区分大小写\"\r\n            v-decorator=\"['password', {rules: [{ required: true, message: '至少6位密码，区分大小写'}, { validator: this.handlePasswordLevel }], validateTrigger: ['change', 'blur']}]\"\r\n          ></a-input>\r\n        </a-form-item>\r\n      </a-popover>\r\n\r\n      <a-form-item>\r\n        <a-input\r\n          size=\"large\"\r\n\r\n          type=\"password\"\r\n          autocomplete=\"false\"\r\n          placeholder=\"确认密码\"\r\n          v-decorator=\"['password2', {rules: [{ required: true, message: '至少6位密码，区分大小写' }, { validator: this.handlePasswordCheck }], validateTrigger: ['change', 'blur']}]\"\r\n\r\n        ></a-input>\r\n      </a-form-item>\r\n      <a-form-item>\r\n        <a-button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          class=\"register-button\"\r\n          :loading=\"registerBtn\"\r\n          @click.stop.prevent=\"handleSubmit\"\r\n          :disabled=\"registerBtn\">确认修改\r\n        </a-button>\r\n        <router-link class=\"login\" :to=\"{ name: 'login' }\">\r\n\r\n          返回登录\r\n        </router-link>\r\n      </a-form-item>\r\n\r\n    </a-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * 找回密码\r\n */\r\nimport { mixinDevice } from '@/utils/mixin.js'\r\nimport { sendSms,editPwd } from '@/api/retrieve_pwd'\r\n\r\nconst levelNames = {\r\n  0: '低',\r\n  1: '低',\r\n  2: '中',\r\n  3: '强'\r\n}\r\nconst levelClass = {\r\n  0: 'error',\r\n  1: 'error',\r\n  2: 'warning',\r\n  3: 'success'\r\n}\r\nconst levelColor = {\r\n  0: '#ff0000',\r\n  1: '#ff0000',\r\n  2: '#ff7e05',\r\n  3: '#52c41a'\r\n}\r\nexport default {\r\n  name: 'Register',\r\n  components: {\r\n  },\r\n  mixins: [mixinDevice],\r\n  data () {\r\n    return {\r\n      form: this.$form.createForm(this),\r\n\r\n      state: {\r\n        time: 60,\r\n        smsSendBtn: false,\r\n        passwordLevel: 0,\r\n        passwordLevelChecked: false,\r\n        percent: 10,\r\n        progressColor: '#FF0000'\r\n      },\r\n      registerBtn: false\r\n    }\r\n  },\r\n  computed: {\r\n    passwordLevelClass () {\r\n      return levelClass[this.state.passwordLevel]\r\n    },\r\n    passwordLevelName () {\r\n      return levelNames[this.state.passwordLevel]\r\n    },\r\n    passwordLevelColor () {\r\n      return levelColor[this.state.passwordLevel]\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    handlePasswordLevel (rule, value, callback) {\r\n      let level = 0\r\n\r\n      // 判断这个字符串中有没有数字\r\n      if (/[0-9]/.test(value)) {\r\n        level++\r\n      }\r\n      // 判断字符串中有没有字母\r\n      if (/[a-zA-Z]/.test(value)) {\r\n        level++\r\n      }\r\n      // 判断字符串中有没有特殊符号\r\n      if (/[^0-9a-zA-Z_]/.test(value)) {\r\n        level++\r\n      }\r\n      this.state.passwordLevel = level\r\n      this.state.percent = level * 30\r\n      if (level >= 2) {\r\n        if (level >= 3) {\r\n          this.state.percent = 100\r\n        }\r\n        callback()\r\n      } else {\r\n        if (level === 0) {\r\n          this.state.percent = 10\r\n        }\r\n        callback(new Error('密码强度不够'))\r\n      }\r\n    },\r\n\r\n    handlePasswordCheck (rule, value, callback) {\r\n      const password = this.form.getFieldValue('password')\r\n      console.log('value', value)\r\n      if (value === undefined) {\r\n        callback(new Error('请输入密码'))\r\n      }\r\n      if (value && password && value.trim() !== password.trim()) {\r\n        callback(new Error('两次密码不一致'))\r\n      }\r\n      callback()\r\n    },\r\n\r\n    handlePhoneCheck (rule, value, callback) {\r\n      console.log('handlePhoneCheck, rule:', rule)\r\n      console.log('handlePhoneCheck, value', value)\r\n      console.log('handlePhoneCheck, callback', callback)\r\n\r\n      callback()\r\n    },\r\n\r\n    handlePasswordInputClick () {\r\n      if (!this.isMobile()) {\r\n        this.state.passwordLevelChecked = true\r\n        return\r\n      }\r\n      this.state.passwordLevelChecked = false\r\n    },\r\n\r\n   handleSubmit () {\r\n      const { form: { validateFields }, $router } = this\r\n      validateFields({ force: true },async (err, values) => {\r\n        if (!err) {\r\n          console.log(values)\r\n          const editData={\r\n            mobile:values.mobile,\r\n            newPwd:values.password,\r\n            conPwd:values.password2,\r\n            regType:0,\r\n            verCode:values.captcha\r\n          }\r\n          try {\r\n            let data=await editPwd(editData);\r\n            if(data.code===200){\r\n              this.$notification.success({\r\n                duration:4,\r\n                message:\"密码修改成功\"\r\n              });\r\n              this.$router.push({\r\n                name:'login'\r\n              });\r\n            }else{\r\n              this.$notification.error({\r\n                duration:4,\r\n                message:data.message\r\n              });\r\n            }\r\n          }catch (e) {\r\n            this.requestFailed(\"请求错误\")\r\n          }\r\n\r\n        }\r\n      })\r\n    },\r\n\r\n    getCaptcha (e) {\r\n      e.preventDefault()\r\n      const { form: { validateFields }, state, $message, $notification } = this\r\n\r\n      validateFields(['mobile'], { force: true },\r\n        async (err, values) => {\r\n          if (!err) {\r\n            state.smsSendBtn = true\r\n\r\n            const interval = window.setInterval(() => {\r\n              if (state.time-- <= 0) {\r\n                state.time = 60\r\n                state.smsSendBtn = false\r\n                window.clearInterval(interval)\r\n              }\r\n            }, 1000)\r\n\r\n            const hide = $message.loading('验证码发送中..', 0)\r\n            let sendData = {\r\n              mobileNum: values.mobile,\r\n              smsTpye: 1,\r\n              regType: 0,\r\n              tempId: 1\r\n            };\r\n            try {\r\n              setTimeout(hide,2500);\r\n              let data = await sendSms(sendData);\r\n              if(data.code===200){\r\n                this.$notification.success({\r\n                  message: '验证码发送成功,请注意查收',\r\n                  duration: 4\r\n                });\r\n              }else{\r\n                this.$notification.error({\r\n                  message: '验证码发送错误',\r\n                  duration: 4\r\n                });\r\n              }\r\n            } catch (e) {\r\n              setTimeout(hide,2500);\r\n              this.requestFailed(\"网络错误\");\r\n            }\r\n\r\n          }\r\n        }\r\n      )\r\n    },\r\n    requestFailed (err) {\r\n      this.$notification['error']({\r\n        message: '错误',\r\n        description: ((err.response || {}).data || {}).message || '请求出现错误，请稍后再试',\r\n        duration: 4\r\n      })\r\n      this.registerBtn = false\r\n    }\r\n  },\r\n  watch: {\r\n    'state.passwordLevel' (val) {\r\n      console.log(val)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\">\r\n  .top {\r\n\r\n    text-align: center;\r\n    .header {\r\n      height: 60px;\r\n      line-height: 60px;\r\n\r\n      .badge {\r\n        position: absolute;\r\n        display: inline-block;\r\n        line-height: 1;\r\n        vertical-align: middle;\r\n        margin-left: -12px;\r\n        margin-top: -10px;\r\n        opacity: 0.8;\r\n      }\r\n\r\n      .logo {\r\n        height: 60px;\r\n        vertical-align: top;\r\n        margin-right: 16px;\r\n        border-style: none;\r\n      }\r\n\r\n      .title {\r\n        font-size: 18px;\r\n        color: rgba(0, 0, 0, .85);\r\n        font-family: Avenir, 'Helvetica Neue', Arial, Helvetica, sans-serif;\r\n        font-weight: 600;\r\n        position: relative;\r\n        top: 2px;\r\n      }\r\n    }\r\n    .desc {\r\n      font-size: 18px;\r\n      color: rgba(97, 163, 49, 1);\r\n      margin-top: 12px;\r\n      margin-bottom: 15px;\r\n    }\r\n  }\r\n  .user-register {\r\n\r\n    &.error {\r\n      color: #ff0000;\r\n    }\r\n\r\n    &.warning {\r\n      color: #ff7e05;\r\n    }\r\n\r\n    &.success {\r\n      color: #52c41a;\r\n    }\r\n\r\n  }\r\n\r\n  .user-layout-register {\r\n    .ant-input-group-addon:first-child {\r\n      background-color: #fff;\r\n    }\r\n  }\r\n</style>\r\n<style lang=\"less\" scoped>\r\n\r\n  .user-layout-register {\r\n    background-color: white;\r\n    padding: 20px;\r\n    & > h3 {\r\n      font-size: 16px;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .getCaptcha {\r\n      display: block;\r\n      width: 100%;\r\n      height: 40px;\r\n      text-align: center;\r\n      padding: 0px;\r\n    }\r\n\r\n    .register-button {\r\n      width: 50%;\r\n      text-align: center;\r\n    }\r\n\r\n    .login {\r\n      float: right;\r\n      line-height: 40px;\r\n    }\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/views/user"}]}