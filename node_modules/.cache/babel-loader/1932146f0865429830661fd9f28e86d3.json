{"remainingRequest":"/Users/curry/IdeaProjects/web/node_modules/babel-loader/lib/index.js!/Users/curry/IdeaProjects/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/curry/IdeaProjects/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/curry/IdeaProjects/web/src/views/user/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/curry/IdeaProjects/web/src/views/user/Login.vue","mtime":1618911148000},{"path":"/Users/curry/IdeaProjects/web/node_modules/cache-loader/dist/cjs.js","mtime":1644834874663},{"path":"/Users/curry/IdeaProjects/web/node_modules/babel-loader/lib/index.js","mtime":1644834704109},{"path":"/Users/curry/IdeaProjects/web/node_modules/cache-loader/dist/cjs.js","mtime":1644834874663},{"path":"/Users/curry/IdeaProjects/web/node_modules/vue-loader/lib/index.js","mtime":1644834877865}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/curry/IdeaProjects/web/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha';\nimport { mapActions } from 'vuex';\nimport { timeFix } from '@/utils/util';\nimport { getSmsCaptcha } from '@/api/login';\nimport SIdentify from '@/components/Modal/identify';\nexport default {\n  components: {\n    TwoStepCaptcha: TwoStepCaptcha,\n    SIdentify: SIdentify\n  },\n  data: function data() {\n    return {\n      identifyCodes: \"ABCEFGHJKLMNPQRSTWXY123456789\",\n      identifyCode: \"\",\n      customActiveKey: 'tab1',\n      loginBtn: false,\n      // login type: 0 email, 1 username, 2 telephone\n      loginType: 0,\n      requiredTwoStepCaptcha: false,\n      stepCaptchaVisible: false,\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        loginBtn: false,\n        // login type: 0 email, 1 username, 2 mobile\n        loginType: 2,\n        smsSendBtn: false\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.identifyCode = \"\";\n    this.makeCode(this.identifyCodes, 4);\n  },\n  methods: _objectSpread({}, mapActions(['Login', 'Logout']), {\n    handleSubmit: function handleSubmit(e) {\n      var _this = this;\n\n      console.log(e);\n      e.preventDefault();\n      var validateFields = this.form.validateFields,\n          state = this.state,\n          customActiveKey = this.customActiveKey,\n          Login = this.Login;\n      state.loginBtn = true;\n      var validateFieldsKey = customActiveKey === 'tab1' ? ['userName', 'password'] : ['mobile', 'captcha'];\n      validateFields(validateFieldsKey, {\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          // let vCode = values.vNum\n          // if(vCode.toUpperCase()!=this.identifyCode){\n          //   this.requestFailed(\"验证码错误\");\n          //   setTimeout(() => {\n          //     state.loginBtn = false\n          //   }, 600)\n          //   this.refreshCode()\n          //   return\n          // }\n          var loginParams = {\n            userName: values.userName,\n            password: values.password\n          };\n          console.log(loginParams);\n          Login(loginParams).then(function (res) {\n            return _this.loginSuccess(res);\n          }).catch(function (err) {\n            return _this.requestFailed(err);\n          }).finally(function () {\n            _this.refreshCode();\n\n            setTimeout(function () {\n              state.loginBtn = false;\n            }, 600);\n          });\n        } else {\n          setTimeout(function () {\n            state.loginBtn = false;\n          }, 600);\n        }\n      });\n    },\n    getCaptcha: function getCaptcha(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var validateFields = this.form.validateFields,\n          state = this.state;\n      validateFields(['mobile'], {\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          state.smsSendBtn = true;\n          var interval = window.setInterval(function () {\n            if (state.time-- <= 0) {\n              state.time = 60;\n              state.smsSendBtn = false;\n              window.clearInterval(interval);\n            }\n          }, 1000);\n\n          var hide = _this2.$message.loading('验证码发送中..', 0);\n\n          getSmsCaptcha({\n            mobile: values.mobile\n          }).then(function (res) {\n            setTimeout(hide, 2500);\n\n            _this2.$notification['success']({\n              message: '提示',\n              description: '验证码获取成功，您的验证码为：' + res.result.captcha,\n              duration: 8\n            });\n          }).catch(function (err) {\n            setTimeout(hide, 1);\n            clearInterval(interval);\n            state.time = 60;\n            state.smsSendBtn = false;\n\n            _this2.requestFailed(err);\n          });\n        }\n      });\n    },\n    stepCaptchaSuccess: function stepCaptchaSuccess() {\n      this.loginSuccess();\n    },\n    stepCaptchaCancel: function stepCaptchaCancel() {\n      var _this3 = this;\n\n      this.Logout().then(function () {\n        _this3.loginBtn = false;\n        _this3.stepCaptchaVisible = false;\n      });\n    },\n    loginSuccess: function loginSuccess(res) {\n      var _this4 = this;\n\n      console.log(123123123);\n      this.$router.push('/'); // 延迟 1 秒显示欢迎信息\n\n      setTimeout(function () {\n        _this4.$notification.success({\n          message: '欢迎',\n          description: \"\".concat(timeFix(), \"\\uFF0C\\u6B22\\u8FCE\\u56DE\\u6765\")\n        });\n      }, 1000);\n    },\n    requestFailed: function requestFailed(err) {\n      this.$notification['error']({\n        message: '错误',\n        description: err,\n        duration: 4\n      });\n    },\n    //验证码\n    randomNum: function randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    refreshCode: function refreshCode() {\n      this.identifyCode = \"\";\n      this.makeCode(this.identifyCodes, 4);\n    },\n    makeCode: function makeCode(o, l) {\n      for (var i = 0; i < l; i++) {\n        this.identifyCode += this.identifyCodes[this.randomNum(0, this.identifyCodes.length)];\n      } //console.log(this.identifyCode);\n\n    }\n  })\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <div class=\"top\">\r\n      <div class=\"header\">\r\n        <a href=\"/\">\r\n          <img src=\"~@/assets/login/Logo1.png\" class=\"logo\" alt=\"logo\" style=\"margin-top: 38px\">\r\n\r\n        </a>\r\n      </div>\r\n      <div class=\"desc\">\r\n       \r\n      </div>\r\n    </div>\r\n    <a-form\r\n      id=\"formLogin\"\r\n      class=\"user-layout-login\"\r\n      ref=\"formLogin\"\r\n      :form=\"form\"\r\n      @submit=\"handleSubmit\"\r\n    >\r\n      <a-form-item>\r\n        <a-input\r\n          size=\"large\"\r\n          type=\"text\"\r\n          placeholder=\"请输入账号\"\r\n          v-decorator=\"[\r\n            'userName',\r\n            {rules: [{ required: true, message: '请输入帐号' }], validateTrigger: 'blur'}\r\n          ]\"\r\n        >\r\n          <a-icon slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n        </a-input>\r\n      </a-form-item>\r\n\r\n      <a-form-item>\r\n        <a-input\r\n          size=\"large\"\r\n          type=\"password\"\r\n          autocomplete=\"false\"\r\n          placeholder=\"请输入密码\"\r\n          v-decorator=\"[\r\n            'password',\r\n            {rules: [{ required: true, message: '请输入密码' }], validateTrigger: 'blur'}\r\n          ]\"\r\n        >\r\n          <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n        </a-input>\r\n      </a-form-item>\r\n\r\n\r\n      <!-- <a-form-item>\r\n        <a-input\r\n          size=\"large\"\r\n          type=\"text\"\r\n          placeholder=\"输入验证码\"\r\n          v-decorator=\"['vNum', {rules: [{ required: true,  message: '请输入验证码' }], validateTrigger: 'blur'}]\"\r\n        >\r\n          <a-icon slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\r\n       </a-input>\r\n      </a-form-item>\r\n      <div>       \r\n        <div class=\"v_code\" @click=\"refreshCode\">\r\n          <s-identify :identifyCode=\"identifyCode\"></s-identify>\r\n        </div>\r\n        <div  class=\"v_text\">看不清,请点击图片换一张</div>\r\n      </div> -->\r\n      <a-form-item>\r\n\r\n        <router-link\r\n          :to=\"{ name: 'RetrievePwd' }\"\r\n          class=\"forge-password\"\r\n          style=\"float: right\"\r\n        >忘记密码?</router-link>\r\n      </a-form-item>\r\n\r\n      <a-form-item style=\"margin-top:24px; \">\r\n        <a-button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          class=\"login-button\"\r\n          :loading=\"state.loginBtn\"\r\n          :disabled=\"state.loginBtn\"\r\n        >确认登录</a-button>\r\n      </a-form-item>\r\n\r\n    </a-form>\r\n\r\n    <!-- <two-step-captcha\r\n      v-if=\"requiredTwoStepCaptcha\"\r\n      :visible=\"stepCaptchaVisible\"\r\n      @success=\"stepCaptchaSuccess\"\r\n      @cancel=\"stepCaptchaCancel\"\r\n    ></two-step-captcha> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'\r\nimport { mapActions } from 'vuex'\r\nimport { timeFix } from '@/utils/util'\r\nimport { getSmsCaptcha } from '@/api/login'\r\nimport SIdentify from '@/components/Modal/identify'\r\n\r\nexport default {\r\n  components: {\r\n    TwoStepCaptcha,\r\n    SIdentify\r\n  },\r\n  data () {\r\n    return {\r\n      identifyCodes: \"ABCEFGHJKLMNPQRSTWXY123456789\",\r\n      identifyCode: \"\",\r\n      customActiveKey: 'tab1',\r\n      loginBtn: false,\r\n      // login type: 0 email, 1 username, 2 telephone\r\n      loginType: 0,\r\n      requiredTwoStepCaptcha: false,\r\n      stepCaptchaVisible: false,\r\n      form: this.$form.createForm(this),\r\n      state: {\r\n        time: 60,\r\n        loginBtn: false,\r\n        // login type: 0 email, 1 username, 2 mobile\r\n        loginType: 2,\r\n        smsSendBtn: false\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.identifyCode = \"\";\r\n    this.makeCode(this.identifyCodes, 4);\r\n  },\r\n  methods: {\r\n    ...mapActions(['Login', 'Logout']),\r\n\r\n    handleSubmit (e) {\r\n      console.log(e)\r\n      e.preventDefault()\r\n      const {\r\n        form: { validateFields },\r\n        state,\r\n        customActiveKey,\r\n        Login\r\n      } = this\r\n\r\n      state.loginBtn = true\r\n\r\n      const validateFieldsKey = customActiveKey === 'tab1' ? ['userName', 'password'] : ['mobile', 'captcha']\r\n\r\n      validateFields(validateFieldsKey, { force: true }, (err, values) => {\r\n        if (!err) {\r\n          // let vCode = values.vNum\r\n          // if(vCode.toUpperCase()!=this.identifyCode){\r\n          //   this.requestFailed(\"验证码错误\");\r\n          //   setTimeout(() => {\r\n          //     state.loginBtn = false\r\n          //   }, 600)\r\n          //   this.refreshCode()\r\n          //   return\r\n          // }\r\n          const loginParams = {\r\n            userName: values.userName,\r\n            password: values.password\r\n          }\r\n          console.log(loginParams)\r\n          Login(loginParams)\r\n            .then((res) => this.loginSuccess(res))\r\n            .catch(err => this.requestFailed(err))\r\n            .finally(() => {\r\n              this.refreshCode()\r\n              setTimeout(() => {\r\n                state.loginBtn = false\r\n              }, 600)\r\n            })\r\n        } else {\r\n          setTimeout(() => {\r\n            state.loginBtn = false\r\n          }, 600)\r\n        }\r\n      })\r\n    },\r\n    getCaptcha (e) {\r\n      e.preventDefault()\r\n      const { form: { validateFields }, state } = this\r\n\r\n      validateFields(['mobile'], { force: true }, (err, values) => {\r\n        if (!err) {\r\n          state.smsSendBtn = true\r\n\r\n          const interval = window.setInterval(() => {\r\n            if (state.time-- <= 0) {\r\n              state.time = 60\r\n              state.smsSendBtn = false\r\n              window.clearInterval(interval)\r\n            }\r\n          }, 1000)\r\n\r\n          const hide = this.$message.loading('验证码发送中..', 0)\r\n          getSmsCaptcha({ mobile: values.mobile }).then(res => {\r\n            setTimeout(hide, 2500)\r\n            this.$notification['success']({\r\n              message: '提示',\r\n              description: '验证码获取成功，您的验证码为：' + res.result.captcha,\r\n              duration: 8\r\n            })\r\n          }).catch(err => {\r\n            setTimeout(hide, 1)\r\n            clearInterval(interval)\r\n            state.time = 60\r\n            state.smsSendBtn = false\r\n            this.requestFailed(err)\r\n          })\r\n        }\r\n      })\r\n    },\r\n    stepCaptchaSuccess () {\r\n      this.loginSuccess()\r\n    },\r\n    stepCaptchaCancel () {\r\n      this.Logout().then(() => {\r\n        this.loginBtn = false\r\n        this.stepCaptchaVisible = false\r\n      })\r\n    },\r\n\r\n    loginSuccess (res) {\r\n      console.log(123123123)\r\n      this.$router.push('/')\r\n      // 延迟 1 秒显示欢迎信息\r\n      setTimeout(() => {\r\n        this.$notification.success({\r\n          message: '欢迎',\r\n          description: `${timeFix()}，欢迎回来`\r\n        })\r\n      }, 1000)\r\n    },\r\n    requestFailed (err) {\r\n      this.$notification['error']({\r\n        message: '错误',\r\n        description: err,\r\n        duration: 4\r\n      })\r\n    },\r\n    //验证码\r\n    randomNum(min, max) {\r\n      return Math.floor(Math.random() * (max - min) + min);\r\n    },\r\n    refreshCode() {\r\n      this.identifyCode = \"\";\r\n      this.makeCode(this.identifyCodes, 4);\r\n    },\r\n    makeCode(o, l) {\r\n      for (let i = 0; i < l; i++) {\r\n        this.identifyCode += this.identifyCodes[\r\n          this.randomNum(0, this.identifyCodes.length)\r\n        ];\r\n      }\r\n      //console.log(this.identifyCode);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .main{\r\n    background-color: white;\r\n    padding: 0px 20px;\r\n    border-radius:11px;\r\n    width:406px;\r\n    height:522px;\r\n  }\r\n  .top {\r\n    padding-top: 10px;\r\n    text-align: center;\r\n    .header {\r\n      height: 44px;\r\n      line-height: 44px;\r\n\r\n      .badge {\r\n        position: absolute;\r\n        display: inline-block;\r\n        line-height: 1;\r\n        vertical-align: middle;\r\n        margin-left: -12px;\r\n        margin-top: -10px;\r\n        opacity: 0.8;\r\n      }\r\n\r\n      .logo {\r\n        height: 44px;\r\n        vertical-align: top;\r\n        margin-right: 16px;\r\n        border-style: none;\r\n      }\r\n\r\n      .title {\r\n        font-size: 33px;\r\n        color: rgba(0, 0, 0, .85);\r\n        font-family: Avenir, 'Helvetica Neue', Arial, Helvetica, sans-serif;\r\n        font-weight: 600;\r\n        position: relative;\r\n        top: 2px;\r\n      }\r\n    }\r\n    .desc {\r\n      font-size: 20px;\r\n      color: rgba(97, 163, 49, 1);\r\n      margin-top: 12px;\r\n      margin-bottom: 40px;\r\n    }\r\n  }\r\n.user-layout-login {\r\n  margin-top: 90px;\r\n  padding-bottom: 5px;\r\n  label {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .getCaptcha {\r\n    display: block;\r\n    width: 100%;\r\n    height: 40px;\r\n  }\r\n\r\n  .v_code{\r\n    display: inline-block;\r\n    width: 115px;\r\n  }\r\n  .v_text{\r\n    padding-left: 10px;\r\n    display: inline-block;\r\n    width: 200px;\r\n  }\r\n\r\n  .forge-password {\r\n    font-size: 14px;\r\n  color: #F16227;\r\n  }\r\n\r\n  button.login-button {\r\n /*   padding: 0 10px;\r\n    font-size: 16px;\r\n     width:361px;\r\n    height:44px;\r\n   */\r\n    height: 40px;\r\n    width: 100%;\r\n    background:linear-gradient(90deg,rgba(254,133,66,1),rgba(241,97,38,1));\r\n    border-radius:7px;\r\n    border-color:#F16227;\r\n  }\r\n\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/user"}]}