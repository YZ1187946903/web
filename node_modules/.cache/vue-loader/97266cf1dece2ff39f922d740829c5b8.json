{"remainingRequest":"/Users/curry/IdeaProjects/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/curry/IdeaProjects/web/src/components/Modal/identify.vue?vue&type=style&index=0&id=34694f5e&lang=less&scoped=true&","dependencies":[{"path":"/Users/curry/IdeaProjects/web/src/components/Modal/identify.vue","mtime":1597645812000},{"path":"/Users/curry/IdeaProjects/web/node_modules/css-loader/index.js","mtime":1644834704815},{"path":"/Users/curry/IdeaProjects/web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1644834877865},{"path":"/Users/curry/IdeaProjects/web/node_modules/postcss-loader/src/index.js","mtime":1644834877019},{"path":"/Users/curry/IdeaProjects/web/node_modules/less-loader/dist/cjs.js","mtime":1644834920680},{"path":"/Users/curry/IdeaProjects/web/node_modules/cache-loader/dist/cjs.js","mtime":1644834874663},{"path":"/Users/curry/IdeaProjects/web/node_modules/vue-loader/lib/index.js","mtime":1644834877865}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.s-canvas{\n    width: 120px;\n}\n\n",{"version":3,"sources":["identify.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsIA;AACA;AACA","file":"identify.vue","sourceRoot":"src/components/Modal","sourcesContent":["<template>\r\n  <div class=\"s-canvas\">\r\n    <canvas id=\"s-canvas\" :width=\"contentWidth\" :height=\"contentHeight\"></canvas>\r\n  </div>\r\n</template>\r\n<script>\r\n  export default{\r\n    name: 'SIdentify',\r\n    props: {\r\n      identifyCode: {\r\n        type: String,\r\n        default: '1234'\r\n      },\r\n      fontSizeMin: {\r\n        type: Number,\r\n        default: 20\r\n      },\r\n      fontSizeMax: {\r\n        type: Number,\r\n        default: 40\r\n      },\r\n      backgroundColorMin: {\r\n        type: Number,\r\n        default: 180\r\n      },\r\n      backgroundColorMax: {\r\n        type: Number,\r\n        default: 240\r\n      },\r\n      colorMin: {\r\n        type: Number,\r\n        default: 50\r\n      },\r\n      colorMax: {\r\n        type: Number,\r\n        default: 160\r\n      },\r\n      lineColorMin: {\r\n        type: Number,\r\n        default: 40\r\n      },\r\n      lineColorMax: {\r\n        type: Number,\r\n        default: 180\r\n      },\r\n      dotColorMin: {\r\n        type: Number,\r\n        default: 0\r\n      },\r\n      dotColorMax: {\r\n        type: Number,\r\n        default: 255\r\n      },\r\n      contentWidth: {\r\n        type: Number,\r\n        default: 112\r\n      },\r\n      contentHeight: {\r\n        type: Number,\r\n        default: 38\r\n      }\r\n    },\r\n    methods: {\r\n      // 生成一个随机数\r\n      randomNum (min, max) {\r\n        return Math.floor(Math.random() * (max - min) + min)\r\n      },\r\n      // 生成一个随机的颜色\r\n      randomColor (min, max) {\r\n        let r = this.randomNum(min, max)\r\n        let g = this.randomNum(min, max)\r\n        let b = this.randomNum(min, max)\r\n        return 'rgb(' + r + ',' + g + ',' + b + ')'\r\n      },\r\n      drawPic () {\r\n        let canvas = document.getElementById('s-canvas')\r\n        let ctx = canvas.getContext('2d')\r\n        ctx.textBaseline = 'bottom'\r\n        // 绘制背景\r\n        ctx.fillStyle = this.randomColor(this.backgroundColorMin, this.backgroundColorMax)\r\n        ctx.fillRect(0, 0, this.contentWidth, this.contentHeight)\r\n        // 绘制文字\r\n        for (let i = 0; i < this.identifyCode.length; i++) {\r\n          this.drawText(ctx, this.identifyCode[i], i)\r\n        }\r\n        this.drawLine(ctx)\r\n        this.drawDot(ctx)\r\n      },\r\n      drawText (ctx, txt, i) {\r\n        ctx.fillStyle = this.randomColor(this.colorMin, this.colorMax)\r\n        ctx.font = this.randomNum(this.fontSizeMin, this.fontSizeMax) + 'px SimHei'\r\n        let x = (i + 1) * (this.contentWidth / (this.identifyCode.length + 1))\r\n        let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5)\r\n        var deg = this.randomNum(-45, 45)\r\n        // 修改坐标原点和旋转角度\r\n        ctx.translate(x, y)\r\n        ctx.rotate(deg * Math.PI / 180)\r\n        ctx.fillText(txt, 0, 0)\r\n        // 恢复坐标原点和旋转角度\r\n        ctx.rotate(-deg * Math.PI / 180)\r\n        ctx.translate(-x, -y)\r\n      },\r\n      drawLine (ctx) {\r\n        // 绘制干扰线\r\n        for (let i = 0; i < 8; i++) {\r\n          ctx.strokeStyle = this.randomColor(this.lineColorMin, this.lineColorMax)\r\n          ctx.beginPath()\r\n          ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\r\n          //ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\r\n          ctx.stroke()\r\n        }\r\n      },\r\n      drawDot (ctx) {\r\n        // 绘制干扰点\r\n        for (let i = 0; i < 100; i++) {\r\n          ctx.fillStyle = this.randomColor(0, 255)\r\n          ctx.beginPath()\r\n          ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI)\r\n          ctx.fill()\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      identifyCode () {\r\n        this.drawPic()\r\n      }\r\n    },\r\n    mounted () {\r\n      this.drawPic()\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    .s-canvas{\r\n        width: 120px;\r\n    }\r\n\r\n</style>"]}]}